

Fortran code:
- Laser field (Granucci paper, Thachuk paper): radiative/nonradiative hops
- doxygen comments
- substitute real*8 and friends with real(kind=??) stuff


Makefile:
- output.f90 needs to be compiled every time, so that the build info is always up-to-date


Tutorial:
- mark background infos


Others:
- script for extracting random geometries from trajectories (from/to timestep, which trajectories, ...)
- script for setting up scattering initial conditions (merge two initconds files with Wigner distributions, setting translational and rotational shift and relative translational and rotational velocities)


MOLPRO interface:
- allow the interface to do several subsequent calculations (so that it can first do H/DM/SOC/OVERLAP and then the gradients/NACs)                                      DONE
- implement to shift the records at restarts (makes the item directly above unnecessary), alternatively, try whether file can be opened only until record X             UNNECESSARY
- for SOC/DM, always calculate the OVERLAPS, extract the phases, problem: phases are not in overlap matrix
- CASSCF-CI overlaps for phases: doable, but need to store the CAS and CI coefficients for samestep jobs
  Translation from CASSCF to MRCI wavefunctions:
  * |2000> = |2000>
  * |/\00> = 1/sqrt(2) * [ |ab00> - |ba00> ]
  * |//00> = |aa00>
  * |////> = |aaaa>
- ionization via Dyson code
- several independent CASSCF calculations (but with same active space)                                                                                                  DONE: can do arbitrarily different active spaces for different multiplicities
- integral reuse (activated by keyword in SH2PRO.inp)
- use routines from COLUMBUS interface (statemap etc)                                                                                                                   PARTIALLY DONE
- rework the checknacs/recalculate nacs system




Python:
- question(): add comma-separated lists
- class for understanding ranges:
  for example:
        s = "2,5,7-9,12"
        ranges = (x.split("-") for x in s.split(","))
        print [i for r in ranges for i in range(int(r[0]), int(r[-1]) + 1)]
- delete all with statements




For SHARC workshop:
- SHARC homepage banner als lineal (werbeartikel) machen lassen :D





COLUMBUS interface:
- parallel jobs



MOLCAS interface:
- state-averaging with zero weight extra states




Test suite:
- adjust to new MOLCAS interface