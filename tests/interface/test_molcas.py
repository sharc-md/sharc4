import os
import shutil

import h5py
import numpy as np
import pytest
from pyscf import tools
from SHARC_MOLCAS import SHARC_MOLCAS
from utils import electronic_state, expand_path

PATH = expand_path("$SHARC/../tests/interface")


def test_molcasversion():
    tests = [
        (os.path.join(PATH, "inputs/molcas/version1"), (18, 0)),
        (os.path.join(PATH, "inputs/molcas/version2"), (23, 6)),
        (os.path.join(PATH, "inputs/molcas/version3"), (20, 10)),
    ]

    for i, ref in tests:
        assert SHARC_MOLCAS().get_molcas_version(i) == ref


def test_molcasversion1():
    tests = [PATH, os.path.join(PATH, "inputs/molcas/version4")]

    for i in tests:
        with pytest.raises((ValueError, FileNotFoundError)):
            SHARC_MOLCAS().get_molcas_version(i)


def test_get_features():
    tests = [
        (os.path.join(PATH, "inputs/molcas/features/bin1/"), (False, True, True)),
        (os.path.join(PATH, "inputs/molcas/features/bin2/"), (True, True, True)),
        (os.path.join(PATH, "inputs/molcas/features/bin3/"), (False, True, False)),
        (os.path.join(PATH, "inputs/molcas/features/bin4/"), (False, False, False)),
    ]

    for path, ref in tests:
        test_interface = SHARC_MOLCAS()
        test_interface.QMin.resources["molcas"] = path
        test_interface._get_molcas_features()
        assert (test_interface._wfa, test_interface._hdf5, test_interface._mpi) == ref


def test_get_features2():
    """
    HDF, MPI should be false if ldd not installed
    """
    old_environ = dict(os.environ)
    os.environ.update({"PATH": "/tmp"})
    test_interface = SHARC_MOLCAS()
    test_interface.QMin.resources["molcas"] = os.path.join(PATH, "inputs/molcas/features/bin2/")
    test_interface._get_molcas_features()
    os.environ.clear()
    os.environ.update(old_environ)
    assert (test_interface._wfa, test_interface._hdf5, test_interface._mpi) == (True, False, False)


def test_generate_schedule():
    """
    Test if joblist contains all job keys
    """
    tests = [
        (
            os.path.join(PATH, "inputs/molcas/schedule/QM1.in"),
            [{"master"}, {"grad_1_1", "grad_1_2", "grad_1_3", "grad_1_4", "grad_2_1", "grad_2_2"}],
        ),
        (
            os.path.join(PATH, "inputs/molcas/schedule/QM2.in"),
            [
                {"master"},
                {
                    "grad_1_1",
                    "grad_1_2",
                    "grad_1_3",
                    "grad_1_4",
                    "grad_2_1",
                    "grad_2_2",
                    "nacdr_1_1_1_2",
                    "nacdr_1_1_1_3",
                    "nacdr_1_1_1_4",
                    "nacdr_1_2_1_3",
                    "nacdr_1_2_1_4",
                    "nacdr_1_3_1_4",
                    "nacdr_2_1_2_2",
                },
            ],
        ),
        (
            os.path.join(PATH, "inputs/molcas/schedule/QM3.in"),
            [{"master"}, {"grad_1_1", "grad_1_2", "grad_1_3", "grad_1_4", "grad_2_1", "grad_2_2", "nacdr_1_1_1_2"}],
        ),
        (
            os.path.join(PATH, "inputs/molcas/schedule/QM4.in"),
            [{"master"}, {"grad_1_1", "grad_2_1", "nacdr_1_1_1_2"}],
        ),
        (
            os.path.join(PATH, "inputs/molcas/schedule/QM5.in"),
            [{"master"}],
        ),
    ]

    for qmin, ref in tests:
        test_interface = SHARC_MOLCAS()
        test_interface.setup_mol(qmin)
        test_interface._read_template = True
        test_interface._read_resources = True
        test_interface.setup_interface()
        test_interface._hdf5 = True
        test_interface.read_requests(qmin)
        schedule = test_interface._generate_schedule()
        assert len(schedule) == len(ref)
        for idx, i in enumerate(ref):
            assert schedule[idx].keys() == i


def test_gettasks_init():
    # Test different requests from INIT
    # Currently no always_guess, always_orb_init
    tests = [
        (
            os.path.join(PATH, "inputs/molcas/tasks/QM1.in"),
            os.path.join(PATH, "inputs/molcas/tasks/template_casscf"),
            {
                "master": (
                    0,
                    [
                        ["gateway"],
                        ["seward"],
                        ["rasscf", 1, 4, False, False],
                        ["copy", "MOLCAS.rasscf.molden", "MOLCAS.1.molden"],
                        ["copy", "MOLCAS.JobIph", "MOLCAS.1.JobIph"],
                        ["rasscf", 2, 2, False, False],
                        ["copy", "MOLCAS.rasscf.molden", "MOLCAS.2.molden"],
                        ["copy", "MOLCAS.JobIph", "MOLCAS.2.JobIph"],
                        ["link", "MOLCAS.1.JobIph", "JOB001"],
                        ["rassi", "dm", [4]],
                        ["copy", "MOLCAS.rassi.h5", "MOLCAS.rassi.1.h5"],
                        ["link", "MOLCAS.2.JobIph", "JOB001"],
                        ["rassi", "dm", [2]],
                        ["copy", "MOLCAS.rassi.h5", "MOLCAS.rassi.2.h5"],
                        ["link", "MOLCAS.1.JobIph", "JOB001"],
                        ["link", "MOLCAS.2.JobIph", "JOB002"],
                        ["rassi", "soc", [4, 2]],
                    ],
                ),
                "grad_1_1": (
                    1,
                    [
                        ["copy", "$master_path/MOLCAS.1.JobIph", "JOBOLD"],
                        ["rasscf", 1, 4, True, False],
                        ["mclr", 0.0001, "sala=1"],
                        ["alaska"],
                    ],
                ),
            },
        ),
        (
            os.path.join(PATH, "inputs/molcas/tasks/QM2.in"),
            os.path.join(PATH, "inputs/molcas/tasks/template_casscf"),
            {
                "master": (
                    0,
                    [
                        ["gateway"],
                        ["seward"],
                        ["rasscf", 1, 4, False, False],
                        ["copy", "MOLCAS.JobIph", "MOLCAS.1.JobIph"],
                        ["rasscf", 2, 2, False, False],
                        ["copy", "MOLCAS.JobIph", "MOLCAS.2.JobIph"],
                        ["link", "MOLCAS.1.JobIph", "JOB001"],
                        ["link", "MOLCAS.2.JobIph", "JOB002"],
                        ["rassi", "", [4, 2]],
                    ],
                )
            },
        ),
        (
            os.path.join(PATH, "inputs/molcas/tasks/QM3.in"),
            os.path.join(PATH, "inputs/molcas/tasks/template_casscf"),
            {
                "master": (
                    0,
                    [
                        ["gateway"],
                        ["seward"],
                        ["rasscf", 1, 4, False, False],
                        ["copy", "MOLCAS.JobIph", "MOLCAS.1.JobIph"],
                        ["rasscf", 2, 2, False, False],
                        ["copy", "MOLCAS.JobIph", "MOLCAS.2.JobIph"],
                        ["link", "MOLCAS.1.JobIph", "JOB001"],
                        ["link", "MOLCAS.2.JobIph", "JOB002"],
                        ["rassi", "", [4, 2]],
                    ],
                ),
                "grad_1_2": (
                    1,
                    [
                        ["copy", "$master_path/MOLCAS.1.JobIph", "JOBOLD"],
                        ["rasscf", 1, 4, True, False],
                        ["mclr", 0.0001, "sala=2"],
                        ["alaska"],
                    ],
                ),
            },
        ),
        (
            os.path.join(PATH, "inputs/molcas/tasks/QM4.in"),
            os.path.join(PATH, "inputs/molcas/tasks/template_casscf"),
            {
                "master": (
                    0,
                    [
                        ["gateway"],
                        ["seward"],
                        ["rasscf", 1, 4, False, False],
                        ["copy", "MOLCAS.JobIph", "MOLCAS.1.JobIph"],
                        ["rasscf", 2, 2, False, False],
                        ["copy", "MOLCAS.JobIph", "MOLCAS.2.JobIph"],
                        ["link", "MOLCAS.1.JobIph", "JOB001"],
                        ["rassi", "dm", [4]],
                        ["copy", "MOLCAS.rassi.h5", "MOLCAS.rassi.1.h5"],
                        ["link", "MOLCAS.2.JobIph", "JOB001"],
                        ["rassi", "dm", [2]],
                        ["copy", "MOLCAS.rassi.h5", "MOLCAS.rassi.2.h5"],
                        ["link", "MOLCAS.1.JobIph", "JOB001"],
                        ["link", "MOLCAS.2.JobIph", "JOB002"],
                        ["rassi", "soc", [4, 2]],
                    ],
                ),
                "grad_1_1": (
                    1,
                    [
                        ["copy", "$master_path/MOLCAS.1.JobIph", "JOBOLD"],
                        ["rasscf", 1, 4, True, False],
                        ["mclr", 0.0001, "sala=1"],
                        ["alaska"],
                    ],
                ),
                "nacdr_1_1_1_2": (
                    1,
                    [
                        ["copy", "$master_path/MOLCAS.1.JobIph", "MOLCAS.1.JobIph"],
                        ["link", "MOLCAS.1.JobIph", "JOBOLD"],
                        ["rasscf", 1, 4, True, False],
                        ["mclr", 0.0001, "nac=1 2"],
                        ["alaska"],
                        ["link", "MOLCAS.1.JobIph", "JOB001"],
                        ["link", "MOLCAS.JobIph", "JOB002"],
                        ["rassi", "overlap", [4, 4]],
                        ["copy", "MOLCAS.rassi.h5", "MOLCAS.rassi.ovlp.1.h5"],
                    ],
                ),
                "nacdr_1_1_1_3": (
                    1,
                    [
                        ["copy", "$master_path/MOLCAS.1.JobIph", "MOLCAS.1.JobIph"],
                        ["link", "MOLCAS.1.JobIph", "JOBOLD"],
                        ["rasscf", 1, 4, True, False],
                        ["mclr", 0.0001, "nac=1 3"],
                        ["alaska"],
                        ["link", "MOLCAS.1.JobIph", "JOB001"],
                        ["link", "MOLCAS.JobIph", "JOB002"],
                        ["rassi", "overlap", [4, 4]],
                        ["copy", "MOLCAS.rassi.h5", "MOLCAS.rassi.ovlp.1.h5"],
                    ],
                ),
            },
        ),
        (
            os.path.join(PATH, "inputs/molcas/schedule/QM5.in"),
            os.path.join(PATH, "inputs/molcas/tasks/template_caspt2"),
            {
                "master": (
                    0,
                    [
                        ["gateway"],
                        ["seward"],
                        ["rasscf", 1, 4, False, False],
                        ["caspt2", 1, 4, "caspt2"],
                        ["copy", "MOLCAS.JobMix", "MOLCAS.1.JobIph"],
                        ["rasscf", 2, 2, False, False],
                        ["caspt2", 2, 2, "caspt2"],
                        ["copy", "MOLCAS.JobMix", "MOLCAS.2.JobIph"],
                        ["link", "MOLCAS.1.JobIph", "JOB001"],
                        ["rassi", "dm", [4]],
                        ["copy", "MOLCAS.rassi.h5", "MOLCAS.rassi.1.h5"],
                        ["link", "MOLCAS.2.JobIph", "JOB001"],
                        ["rassi", "dm", [2]],
                        ["copy", "MOLCAS.rassi.h5", "MOLCAS.rassi.2.h5"],
                        ["link", "MOLCAS.1.JobIph", "JOB001"],
                        ["link", "MOLCAS.2.JobIph", "JOB002"],
                        ["rassi", "soc", [4, 2]],
                    ],
                ),
            },
        ),
        (
            os.path.join(PATH, "inputs/molcas/tasks/QM4.in"),
            os.path.join(PATH, "inputs/molcas/tasks/template_mscaspt2"),
            {
                "master": (
                    0,
                    [
                        ["gateway"],
                        ["seward"],
                        ["rasscf", 1, 4, False, False],
                        ["caspt2", 1, 4, "ms-caspt2"],
                        ["copy", "MOLCAS.JobMix", "MOLCAS.1.JobIph"],
                        ["rasscf", 2, 2, False, False],
                        ["caspt2", 2, 2, "ms-caspt2"],
                        ["copy", "MOLCAS.JobMix", "MOLCAS.2.JobIph"],
                        ["link", "MOLCAS.1.JobIph", "JOB001"],
                        ["rassi", "dm", [4]],
                        ["copy", "MOLCAS.rassi.h5", "MOLCAS.rassi.1.h5"],
                        ["link", "MOLCAS.2.JobIph", "JOB001"],
                        ["rassi", "dm", [2]],
                        ["copy", "MOLCAS.rassi.h5", "MOLCAS.rassi.2.h5"],
                        ["link", "MOLCAS.1.JobIph", "JOB001"],
                        ["link", "MOLCAS.2.JobIph", "JOB002"],
                        ["rassi", "soc", [4, 2]],
                    ],
                ),
                "grad_1_3": (
                    1,
                    [
                        ["copy", "$master_path/MOLCAS.1.JobIph", "JOBOLD"],
                        ["rasscf", 1, 4, True, False],
                        ["caspt2", 1, 4, "ms-caspt2", "GRDT\nrlxroot = 3"],
                        ["mclr", 0.0001],
                        ["alaska"],
                    ],
                ),
                "nacdr_2_1_2_2": (
                    1,
                    [
                        ["copy", "$master_path/MOLCAS.2.JobIph", "MOLCAS.2.JobIph"],
                        ["link", "MOLCAS.2.JobIph", "JOBOLD"],
                        ["rasscf", 2, 2, True, False],
                        ["caspt2", 2, 2, "ms-caspt2", "GRDT\nnac = 1 2"],
                        ["alaska", 1, 2],
                        ["link", "MOLCAS.2.JobIph", "JOB001"],
                        ["link", "MOLCAS.JobIph", "JOB002"],
                        ["rassi", "overlap", [2, 2]],
                        ["copy", "MOLCAS.rassi.h5", "MOLCAS.rassi.ovlp.2.h5"],
                    ],
                ),
            },
        ),
        (
            os.path.join(PATH, "inputs/molcas/tasks/QM1.in"),
            os.path.join(PATH, "inputs/molcas/tasks/template_cmspdft"),
            {
                "master": (
                    0,
                    [
                        ["gateway"],
                        ["seward"],
                        ["rasscf", 1, 4, False, False],
                        ["copy", "MOLCAS.rasscf.molden", "MOLCAS.1.molden"],
                        ["mcpdft", ["KSDFT=t:pbe", "noGrad", "MSPDFT", "WJOB", "CMSS=Do_Rotate.txt", "CMTH=1.0d-10"]],
                        ["copy", "MOLCAS.JobIph", "MOLCAS.1.JobIph"],
                        ["rasscf", 2, 2, False, False],
                        ["copy", "MOLCAS.rasscf.molden", "MOLCAS.2.molden"],
                        ["mcpdft", ["KSDFT=t:pbe", "noGrad", "MSPDFT", "WJOB", "CMSS=Do_Rotate.txt", "CMTH=1.0d-10"]],
                        ["copy", "MOLCAS.JobIph", "MOLCAS.2.JobIph"],
                        ["link", "MOLCAS.1.JobIph", "JOB001"],
                        ["rassi", "dm", [4]],
                        ["copy", "MOLCAS.rassi.h5", "MOLCAS.rassi.1.h5"],
                        ["link", "MOLCAS.2.JobIph", "JOB001"],
                        ["rassi", "dm", [2]],
                        ["copy", "MOLCAS.rassi.h5", "MOLCAS.rassi.2.h5"],
                        ["link", "MOLCAS.1.JobIph", "JOB001"],
                        ["link", "MOLCAS.2.JobIph", "JOB002"],
                        ["rassi", "soc", [4, 2]],
                    ],
                ),
                "grad_1_1": (
                    1,
                    [
                        ["copy", "$master_path/MOLCAS.1.JobIph", "JOBOLD"],
                        ["rasscf", 1, 4, True, False, ["RLXROOT=1"]],
                        ["mcpdft", ["KSDFT=t:pbe", "GRAD", "MSPDFT"]],
                        ["alaska", 1],
                    ],
                ),
            },
        ),
        (
            os.path.join(PATH, "inputs/molcas/tasks/QM1.in"),
            os.path.join(PATH, "inputs/molcas/tasks/template_xmscaspt2"),
            {
                "master": (
                    0,
                    [
                        ["gateway"],
                        ["seward"],
                        ["rasscf", 1, 4, False, False],
                        ["copy", "MOLCAS.rasscf.molden", "MOLCAS.1.molden"],
                        ["caspt2", 1, 4, "xms-caspt2"],
                        ["copy", "MOLCAS.JobMix", "MOLCAS.1.JobIph"],
                        ["rasscf", 2, 2, False, False],
                        ["copy", "MOLCAS.rasscf.molden", "MOLCAS.2.molden"],
                        ["caspt2", 2, 2, "xms-caspt2"],
                        ["copy", "MOLCAS.JobMix", "MOLCAS.2.JobIph"],
                        ["link", "MOLCAS.1.JobIph", "JOB001"],
                        ["rassi", "dm", [4]],
                        ["copy", "MOLCAS.rassi.h5", "MOLCAS.rassi.1.h5"],
                        ["link", "MOLCAS.2.JobIph", "JOB001"],
                        ["rassi", "dm", [2]],
                        ["copy", "MOLCAS.rassi.h5", "MOLCAS.rassi.2.h5"],
                        ["link", "MOLCAS.1.JobIph", "JOB001"],
                        ["link", "MOLCAS.2.JobIph", "JOB002"],
                        ["rassi", "soc", [4, 2]],
                    ],
                ),
                "grad_1_1": (
                    1,
                    [
                        ["copy", "$master_path/MOLCAS.1.JobIph", "JOBOLD"],
                        ["rasscf", 1, 4, True, False],
                        ["caspt2", 1, 4, "xms-caspt2", "GRDT\nrlxroot = 1"],
                        ["mclr", 0.0001],
                        ["alaska"],
                    ],
                ),
            },
        ),
    ]

    with open("SAVE/MOLCAS.1.JobIph", "w") as one, open("SAVE/MOLCAS.2.JobIph", "w") as two:
        one.write("1")
        two.write("1")
    for qmin, templ, ref in tests:
        test_interface = SHARC_MOLCAS()
        test_interface.setup_mol(qmin)
        test_interface.read_template(templ)
        test_interface.QMin.template["ipea"] = 0.0
        test_interface._read_resources = True
        test_interface._hdf5 = True
        test_interface.read_requests(qmin)
        test_interface.setup_interface()
        test_interface.QMin.scheduling["schedule"] = test_interface._generate_schedule()
        for k, v in ref.items():
            tasks = test_interface._gen_tasklist(test_interface.QMin.scheduling["schedule"][v[0]][k])
            try:
                assert tasks == v[1], f"Key: {k}, QMin: {qmin}"
            except Exception as exc:
                shutil.rmtree(os.path.join(os.getcwd(), "SAVE"))
                raise RuntimeError(exc)
    shutil.rmtree(os.path.join(os.getcwd(), "SAVE"))


def test_write_geom():
    tests = [
        (
            os.path.join(PATH, "inputs/molcas/geoms/QM1.in"),
            "3\n\nS1  0.000000 0.000000 0.000841\nH2  -0.000000 0.974799 1.182934\nH3  -0.000000 -0.974799 1.182934\n",
        ),
        (
            os.path.join(PATH, "inputs/molcas/geoms/QM2.in"),
            "10\n\nS1  0.000000 0.000000 0.000000\nC2  0.000000 0.000000 -1.587500\nH3  0.952500 0.000000 -2.116700\nC4  -1.267509 0.000000 -2.291716\nH5  -1.834145 -0.889165 -2.019263\nH6  -1.834145 0.889165 -2.019263\nC7  -1.026071 0.000000 -3.721474\nH8  -1.978014 0.000000 -4.250365\nH9  -0.459435 0.889165 -3.993927\nH10  -0.459435 -0.889165 -3.993927\n",
        ),
        (
            os.path.join(PATH, "inputs/molcas/geoms/QM3.in"),
            "2\n\nI1  0.000000 0.000000 0.000000\nBr2  3.230431 0.000000 0.000000\n",
        ),
        (
            os.path.join(PATH, "inputs/molcas/geoms/QM4.in"),
            "97\n\nC1  3.069079 0.978249 6.081524\nC2  2.262218 0.424504 5.087449\nN3  1.063849 0.973853 4.770988\nC4  0.647373 2.065730 5.426430\nC5  1.403004 2.666685 6.424552\nC6  2.636466 2.112766 6.758791\nC7  2.622002 -0.769724 4.309934\nN8  1.683199 -1.176891 3.421728\nC9  1.917820 -2.257839 2.665695\nC10  3.095337 -2.988177 2.757550\nC11  4.068672 -2.579680 3.666237\nC12  3.827710 -1.456961 4.450212\nRu13  0.000003 0.000001 3.318321\nN14  -1.063846 -0.973850 4.770987\nC15  -2.262218 -0.424504 5.087441\nC16  -3.069084 -0.978252 6.081509\nC17  -2.636473 -2.112769 6.758778\nC18  -1.403007 -2.666684 6.424546\nC19  -0.647372 -2.065727 5.426430\nC20  -2.622000 0.769724 4.309924\nN21  -1.683194 1.176892 3.421722\nC22  -1.917812 2.257840 2.665687\nC23  -3.095332 2.988175 2.757537\nC24  -4.068671 2.579676 3.666219\nC25  -3.827710 1.456958 4.450195\nN26  0.898511 0.998075 1.728900\nC27  0.482076 0.527305 0.536316\nC28  0.948561 1.035115 -0.677736\nC29  1.902076 2.073895 -0.604914\nN30  2.311982 2.519221 0.589379\nC31  1.811327 1.982375 1.689728\nC32  0.475555 0.518390 -1.917957\nC33  -0.475549 -0.518394 -1.917957\nC34  -0.948554 -1.035117 -0.677735\nC35  -0.482067 -0.527307 0.536317\nC36  -1.902070 -2.073897 -0.604911\nC37  -2.409116 -2.628458 -1.846036\nC38  -1.933453 -2.112008 -3.089889\nC39  -0.962307 -1.050816 -3.127001\nC40  -2.422463 -2.650269 -4.306104\nC41  -3.370463 -3.684855 -4.241115\nC42  -3.829419 -4.181363 -3.025138\nC43  -3.353062 -3.658424 -1.828523\nC44  -0.481150 -0.526059 -4.351055\nC45  -0.970832 -1.064924 -5.589904\nC46  -1.931406 -2.118651 -5.578132\nC47  0.962309 1.050814 -3.127002\nC48  0.481149 0.526059 -4.351055\nC49  0.970828 1.064925 -5.589905\nC50  0.491153 0.542230 -6.822505\nC51  -0.491161 -0.542227 -6.822504\nC52  -0.978202 -1.087695 -8.017319\nC53  -1.913018 -2.115033 -8.005229\nC54  -2.385873 -2.624505 -6.802486\nC55  2.409119 2.628457 -1.846039\nC56  1.933455 2.112007 -3.089892\nC57  2.422462 2.650269 -4.306107\nC58  1.931402 2.118653 -5.578134\nN59  -2.311975 -2.519223 0.589382\nC60  -1.811319 -1.982376 1.689731\nN61  -0.898503 -0.998076 1.728901\nC62  3.370462 3.684855 -4.241119\nC63  3.829420 4.181363 -3.025143\nC64  3.353065 3.658423 -1.828527\nC65  0.978191 1.087700 -8.017321\nC66  1.913007 2.115039 -8.005231\nC67  2.385865 2.624508 -6.802489\nH68  -4.565073 -4.983562 -3.015360\nH69  2.278225 2.524075 -8.945705\nH70  -2.278239 -2.524068 -8.945702\nH71  4.565074 4.983562 -3.015366\nH72  -3.254481 -2.555683 7.537408\nH73  -5.004682 3.126174 3.764056\nH74  3.254470 2.555678 7.537425\nH75  5.004682 -3.126179 3.764079\nH76  -0.319615 2.468772 5.136400\nH77  1.020786 3.552746 6.926073\nH78  4.025367 0.525320 6.328989\nH79  1.133291 -2.545707 1.970204\nH80  3.237443 -3.859422 2.122374\nH81  4.574323 -1.117230 5.162569\nH82  -4.025375 -0.525325 6.328969\nH83  -1.020790 -3.552745 6.926069\nH84  0.319619 -2.468766 5.136406\nH85  -4.574326 1.117225 5.162549\nH86  -3.237436 3.859420 2.122360\nH87  -1.133281 2.545710 1.970201\nH88  2.155825 2.366181 2.649657\nH89  -2.155817 -2.366182 2.649660\nH90  -3.700308 -4.034694 -0.868713\nH91  -3.767044 -4.120775 -5.153844\nH92  3.700313 4.034693 -0.868717\nH93  3.767041 4.120777 -5.153849\nH94  0.629926 0.715147 -8.976225\nH95  3.117363 3.426986 -6.831335\nH96  -3.117371 -3.426983 -6.831331\nH97  -0.629940 -0.715141 -8.976225\n",
        ),
    ]

    for geom, ref in tests:
        test_interface = SHARC_MOLCAS()
        test_interface.setup_mol(geom)
        test_interface.set_coords(geom)
        assert test_interface._write_geom(test_interface.QMin.molecule["elements"], test_interface.QMin.coords["coords"]) == ref


def test_get_energy():
    tests = [
        (
            os.path.join(PATH, "inputs/molcas/tasks/QM1.in"),
            "casscf",
            [4, 2],
            os.path.join(PATH, "inputs/molcas/output/hdmsoc420casscf"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/tasks/QM1.in"),
            "casscf",
            [4, 2],
            os.path.join(PATH, "inputs/molcas/output/norootpad_hsoc420"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/tasks/QM1.in"),
            "caspt2",
            [4, 2],
            os.path.join(PATH, "inputs/molcas/output/hdmsoc420caspt2"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/tasks/QM1.in"),
            "cms-pdft",
            [4, 2],
            os.path.join(PATH, "inputs/molcas/output/hdmsoc420cmspdft"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/tasks/QM1.in"),
            "ms-caspt2",
            [4, 2],
            os.path.join(PATH, "inputs/molcas/output/hdmsoc420mscaspt2"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/tasks/QM1.in"),
            "xms-caspt2",
            [4, 2],
            os.path.join(PATH, "inputs/molcas/output/hdmsoc420xmscaspt2"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/tasks/QM6.in"),
            "casscf",
            [6, 2],
            os.path.join(PATH, "inputs/molcas/output/hsocdm620casscf"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/QM1.in"),
            "casscf",
            [6, 4, 4],
            os.path.join(PATH, "inputs/molcas/output/621casscf"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/QM1.in"),
            "caspt2",
            [6, 4, 4],
            os.path.join(PATH, "inputs/molcas/output/621caspt2"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/QM2.in"),
            "casscf",
            [10, 4, 4, 4, 4, 4],
            os.path.join(PATH, "inputs/molcas/output/622222casscf"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/dyson/QM3.in"),
            "casscf",
            [10, 5, 4, 4, 4, 4],
            os.path.join(PATH, "inputs/molcas/output/000022casscf"),
        ),
    ]

    for qmin, method, roots, output in tests:
        test_interface = SHARC_MOLCAS()
        test_interface.setup_mol(qmin)
        test_interface.QMin.template["roots"] = roots
        test_interface.QMin.template["method"] = method

        hdf = h5py.File(f"{output}.h5", "r")
        with open(f"{output}.out", "r", encoding="utf-8") as ascii_out:
            a = test_interface._get_energy(hdf)
            b = test_interface._get_energy(ascii_out.read())
            assert np.allclose(a, b)


def test_get_socs():
    tests = [
        (
            os.path.join(PATH, "inputs/molcas/tasks/QM1.in"),
            "casscf",
            os.path.join(PATH, "inputs/molcas/output/hdmsoc420casscf"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/tasks/QM1.in"),
            "caspt2",
            os.path.join(PATH, "inputs/molcas/output/hdmsoc420caspt2"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/tasks/QM1.in"),
            "cms-pdft",
            os.path.join(PATH, "inputs/molcas/output/hdmsoc420cmspdft"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/tasks/QM1.in"),
            "ms-caspt2",
            os.path.join(PATH, "inputs/molcas/output/hdmsoc420mscaspt2"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/tasks/QM1.in"),
            "xms-caspt2",
            os.path.join(PATH, "inputs/molcas/output/hdmsoc420xmscaspt2"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/tasks/QM6.in"),
            "casscf",
            os.path.join(PATH, "inputs/molcas/output/hsocdm620casscf"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/QM2.in"),
            "casscf",
            os.path.join(PATH, "inputs/molcas/output/622222casscf"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/dyson/QM3.in"),
            "casscf",
            os.path.join(PATH, "inputs/molcas/output/000022casscf"),
        ),
    ]

    for qmin, method, output in tests:
        test_interface = SHARC_MOLCAS()
        test_interface.setup_mol(qmin)
        test_interface.QMin.template["method"] = method
        test_interface.setup_interface()

        hdf = h5py.File(f"{output}.h5", "r")
        with open(f"{output}.out", "r", encoding="utf-8") as ascii_out:
            ref_ascii = test_interface._get_socs(ascii_out.read())
            ref_hdf = test_interface._get_socs(hdf)
            np.einsum("ii->i", ref_hdf)[:] = 0.0
            assert np.allclose(ref_ascii, ref_hdf)


def test_get_grad():
    tests = [
        (
            os.path.join(PATH, "inputs/molcas/output/grad1"),
            np.array(
                [
                    [-1.93061522031230e-14, 2.07963771793602e-03, -7.58071656304145e-02],
                    [-4.92596610394539e-14, 1.68703340325114e-02, 3.66415199618992e-02],
                    [6.85658132425765e-14, -1.89499717504480e-02, 3.91656456685157e-02],
                ]
            ),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/grad2"),
            np.array(
                [
                    [-1.93061522031230e14, 2.07963771793602e-03, -7.58071656304145e-02],
                    [-4.92596610394539e-14, 1.68703340325114e-02, 3.66415199618992e-02],
                    [6.85658132425765e-14, -1.89499717504480e-02, 3.91656456685157e-02],
                ]
            ),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/grad3"),
            np.array(
                [
                    [-1.93061522031230e-14, 2.07963771793602e-03, -7.58071656304145e-02],
                    [-4.92596610394539e-14, 1.68703340325114e-02, 3.66415199618992e-02],
                    [-4.92596610394539e-14, 1.68703340325114e-02, 3.66415199618992e-02],
                    [6.85658132425765e-14, -1.89499717504480e-02, 3.91656456685157e-02],
                    [-4.92596610394539e-14, 1.68703340325114e-02, 3.66415199618992e-02],
                    [-4.92596610394539e-14, 1.68703340325114e-02, 3.66415199618992e-02],
                ]
            ),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/pdft_grad"),
            np.array(
                [
                    [2.49338735473481e00, 1.88485360378669e00, -4.72629798895615e00],
                    [-1.05231079586577e00, -4.20762842460896e-01, 2.76537463073859e00],
                    [-1.44107655886905e00, -1.46409076132579e00, 1.96092335821756e00],
                ]
            ),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/mscaspt2_grad"),
            np.array(
                [
                    [-1.11627801805905e-11, 2.44401158954398e-04, -9.47264260156073e-02],
                    [-1.34818427285443e-11, 2.60014347792472e-02, 4.72155693871952e-02],
                    [2.46446229091352e-11, -2.62458359382001e-02, 4.75108566284179e-02],
                ]
            ),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/xmscaspt2_grad"),
            np.array(
                [
                    [-2.98506469504963e-11, 4.39133485079068e-04, -9.57174122463993e-02],
                    [2.32529303984223e-11, 2.62450546207038e-02, 4.75921606949141e-02],
                    [6.59771655207353e-12, -2.66841881057842e-02, 4.81252515514794e-02],
                ]
            ),
        ),
    ]

    for grad, ref in tests:
        test_interface = SHARC_MOLCAS()
        with open(grad, "r", encoding="utf-8") as file:
            assert np.allclose(test_interface._get_grad(file.read()), ref)


def test_get_nac():
    tests = [
        (
            os.path.join(PATH, "inputs/molcas/output/casscf_nac"),
            np.array(
                [
                    [4.59600985544311e-01, 3.27056590371374e-12, 1.52794321395426e-12],
                    [-1.98996064900520e-01, -2.40445696386980e-12, -2.70792725056564e-12],
                    [-1.98991580093693e-01, -1.10942176397583e-12, 9.14928384659732e-13],
                ]
            ),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/pdft_nac"),
            np.array(
                [
                    [4.49619731397271e-01, -1.35330745308723e-04, 2.23672171966667e00],
                    [-1.94059028259231e-01, 1.44604756461768e00, -1.11830692616236e00],
                    [-1.93946961370966e-01, -1.44591223387113e00, -1.11841479350129e00],
                ]
            ),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/mscaspt2_nac"),
            np.array(
                [
                    [-4.87321455128924e-05, 8.67742769351658e-12, 1.38750932444674e-12],
                    [2.43771930304102e-05, -6.91832006617452e-13, -1.03435069236944e-11],
                    [2.43549524825160e-05, -7.98559568689917e-12, 8.95599759924761e-12],
                ]
            ),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/xmscaspt2_nac"),
            np.array(
                [
                    [-1.43880397582491e-05, -1.28300680798075e-11, 8.32265069311128e-12],
                    [7.21476729695450e-06, 5.43217088215603e-12, 3.39707753610685e-12],
                    [7.17327246347659e-06, 7.39789719765155e-12, -1.17197282292181e-11],
                ]
            ),
        ),
    ]

    for nac, ref in tests:
        test_interface = SHARC_MOLCAS()
        test_interface.QMin.molecule["states"] = [4, 2]
        with open(nac, "r", encoding="utf-8") as file:
            assert np.allclose(test_interface._get_nacdr(file.read()), ref)


def test_get_dipoles():
    tests = [
        (
            os.path.join(PATH, "inputs/molcas/output/dipoles/QM1.in"),
            "casscf",
            os.path.join(PATH, "inputs/molcas/output/dipoles/621casscf"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/dipoles/QM1.in"),
            "caspt2",
            os.path.join(PATH, "inputs/molcas/output/dipoles/621caspt2"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/dipoles/QM1.in"),
            "ms-caspt2",
            os.path.join(PATH, "inputs/molcas/output/dipoles/621mscaspt2"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/dipoles/QM2.in"),
            "xms-caspt2",
            os.path.join(PATH, "inputs/molcas/output/dipoles/622xmscaspt2"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/dipoles/QM1.in"),
            "cms-pdft",
            os.path.join(PATH, "inputs/molcas/output/dipoles/621cmspdft"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/dipoles/QM1.in"),
            "cms-pdft",
            os.path.join(PATH, "inputs/molcas/output/dipoles/621cmspdft_ovlp"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/dipoles/QM3.in"),
            "casscf",
            os.path.join(PATH, "inputs/molcas/output/dipoles/101casscf"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/dipoles/QM4.in"),
            "casscf",
            os.path.join(PATH, "inputs/molcas/output/dipoles/1111casscf"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/dipoles/QM5.in"),
            "casscf",
            os.path.join(PATH, "inputs/molcas/output/dipoles/2222casscf"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/QM2.in"),
            "casscf",
            os.path.join(PATH, "inputs/molcas/output/622222casscf"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/dyson/QM3.in"),
            "casscf",
            os.path.join(PATH, "inputs/molcas/output/000022casscf"),
        ),
    ]

    for qmin, method, output in tests:
        test_interface = SHARC_MOLCAS()
        test_interface.setup_mol(qmin)
        test_interface.QMin.template["method"] = method
        test_interface.setup_interface()

        s_cnt = 0
        ref_hdf = np.zeros((3, test_interface.QMin.molecule["nmstates"], test_interface.QMin.molecule["nmstates"]))
        for m, s in enumerate(test_interface.QMin.molecule["states"], 1):
            if s > 0:
                with h5py.File(f"{output}.{m}.h5", "r") as dp:
                    for _ in range(m):
                        ref_hdf[:, s_cnt : s_cnt + s, s_cnt : s_cnt + s] = dp["SFS_EDIPMOM"][:]
                        s_cnt += s

        with open(f"{output}.out", "r", encoding="utf-8") as ascii_out:
            ref_ascii = test_interface._get_dipoles(ascii_out.read())
            assert np.allclose(ref_ascii, ref_hdf)


def test_get_overlaps():
    tests = [
        (
            os.path.join(PATH, "inputs/molcas/output/ovlp/QM1.in"),
            "casscf",
            os.path.join(PATH, "inputs/molcas/output/ovlp/620casscf"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/ovlp/QM2.in"),
            "casscf",
            os.path.join(PATH, "inputs/molcas/output/ovlp/1001casscf"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/ovlp/QM3.in"),
            "casscf",
            os.path.join(PATH, "inputs/molcas/output/ovlp/3333casscf"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/ovlp/QM4.in"),
            "casscf",
            os.path.join(PATH, "inputs/molcas/output/ovlp/4000casscf"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/ovlp/QM5.in"),
            "casscf",
            os.path.join(PATH, "inputs/molcas/output/ovlp/4200casscf"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/ovlp/QM6.in"),
            "casscf",
            os.path.join(PATH, "inputs/molcas/output/ovlp/1111casscf"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/ovlp/QM3.in"),
            "caspt2",
            os.path.join(PATH, "inputs/molcas/output/ovlp/3333caspt2"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/ovlp/QM3.in"),
            "ms-caspt2",
            os.path.join(PATH, "inputs/molcas/output/ovlp/3333mscaspt2"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/ovlp/QM3.in"),
            "xms-caspt2",
            os.path.join(PATH, "inputs/molcas/output/ovlp/3333xmscaspt2"),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/ovlp/QM3.in"),
            "cms-pdft",
            os.path.join(PATH, "inputs/molcas/output/ovlp/3333cmspdft"),
        ),
    ]
    for qmin, method, output in tests:
        test_interface = SHARC_MOLCAS()
        test_interface.setup_mol(qmin)
        test_interface.QMin.template["method"] = method
        test_interface.setup_interface()

        s_cnt = 0
        ref_hdf = np.zeros((test_interface.QMin.molecule["nmstates"], test_interface.QMin.molecule["nmstates"]))
        for m, s in enumerate(test_interface.QMin.molecule["states"], 1):
            if s > 0:
                with h5py.File(f"{output}.{m}.h5") as f:
                    ovlp = test_interface._get_overlaps(f)
                    for _ in range(m):
                        ref_hdf[s_cnt : s_cnt + s, s_cnt : s_cnt + s] = ovlp
                        s_cnt += s

        ref_ascii = np.zeros((test_interface.QMin.molecule["nmstates"], test_interface.QMin.molecule["nmstates"]))
        with open(f"{output}.out", "r") as f:
            ovlp = f.read()
        s_cnt = 0
        o_cnt = 0
        ovlp = test_interface._get_overlaps(ovlp)
        for m, s in enumerate(test_interface.QMin.molecule["states"], 1):
            if s > 0:
                for _ in range(m):
                    ref_ascii[s_cnt : s_cnt + s, s_cnt : s_cnt + s] = ovlp[o_cnt : o_cnt + s, o_cnt : o_cnt + s]
                    s_cnt += s
                o_cnt += s

        assert np.allclose(ref_ascii, ref_hdf)


def test_theodore():
    tests = [
        (
            os.path.join(PATH, "inputs/molcas/output/theodore/QM1.in"),
            os.path.join(PATH, "inputs/molcas/output/theodore/62222casscf"),
            ["Om", "POSi", "POSf", "PR", "CT"],
            np.array(
                [
                    [0.0, 0.0, 0.0, 0.0, 0.0],
                    [0.918713, 1.004774, 1.248517, 1.302898, 0.250945],
                    [0.902887, 1.004992, 1.281720, 1.344941, 0.284051],
                    [0.870738, 1.131820, 1.302404, 1.513332, 0.430404],
                    [0.874960, 1.178630, 1.240164, 1.495022, 0.411772],
                    [0.957039, 1.178731, 1.276206, 1.540888, 0.292471],
                    [0.0, 0.0, 0.0, 0.0, 0.0],
                    [0.946211, 1.095648, 1.004818, 1.109436, 0.099545],
                    [0.932435, 1.004773, 1.244990, 1.298371, 0.247451],
                    [0.917946, 1.004968, 1.271816, 1.332622, 0.274218],
                    [0.654795, 1.244730, 1.397764, 1.753110, 0.326706],
                    [0.645511, 1.064127, 1.162970, 1.255790, 0.142593],
                    [0.479625, 1.003847, 1.284892, 1.347682, 0.286752],
                    [0.477791, 1.274591, 1.307292, 1.701758, 0.337918],
                    [0.393342, 1.071056, 1.177698, 1.282503, 0.151775],
                    [0.285810, 1.069244, 1.055550, 1.132600, 0.111469],
                ]
            ),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/theodore/QM2.in"),
            os.path.join(PATH, "inputs/molcas/output/theodore/603casscf"),
            ["Om", "POSi", "POSf", "PR", "CT"],
            np.array(
                [
                    [0.0, 0.0, 0.0, 0.0, 0.0],
                    [0.918713, 1.004774, 1.248517, 1.302898, 0.250945],
                    [0.902887, 1.004992, 1.281720, 1.344941, 0.284051],
                    [0.870738, 1.131820, 1.302404, 1.513332, 0.430404],
                    [0.874960, 1.178630, 1.240164, 1.495022, 0.411772],
                    [0.957039, 1.178731, 1.276206, 1.540888, 0.292471],
                    [0.932435, 1.004773, 1.244991, 1.298371, 0.247451],
                    [0.917946, 1.004968, 1.271817, 1.332622, 0.274218],
                    [0.986485, 1.271401, 1.370504, 1.764249, 0.314358],
                ]
            ),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/theodore/QM3.in"),
            os.path.join(PATH, "inputs/molcas/output/theodore/653casscf"),
            ["Om", "POSi", "POSf", "PR", "CT"],
            np.array(
                [
                    [0.0, 0.0, 0.0, 0.0, 0.0],
                    [0.918713, 1.004774, 1.248517, 1.302898, 0.250945],
                    [0.902887, 1.004992, 1.281720, 1.344941, 0.284051],
                    [0.870738, 1.131820, 1.302404, 1.513332, 0.430404],
                    [0.874960, 1.178630, 1.240164, 1.495022, 0.411772],
                    [0.957039, 1.178731, 1.276206, 1.540888, 0.292471],
                    [0.0, 0.0, 0.0, 0.0, 0.0],
                    [0.946004, 1.096024, 1.004854, 1.109917, 0.099959],
                    [0.916110, 1.173820, 1.006754, 1.208271, 0.178891],
                    [0.896023, 1.006796, 1.261959, 1.322067, 0.266229],
                    [0.870787, 1.009060, 1.268486, 1.332597, 0.274936],
                    [0.932435, 1.004773, 1.244990, 1.298371, 0.247451],
                    [0.917946, 1.004968, 1.271816, 1.332622, 0.274218],
                    [0.986485, 1.271402, 1.370505, 1.764252, 0.314360],
                ]
            ),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/theodore/QM3.in"),
            os.path.join(PATH, "inputs/molcas/output/theodore/653caspt2"),
            ["Om", "POSi", "POSf", "PR", "CT"],
            np.array(
                [
                    [0.0, 0.0, 0.0, 0.0, 0.0],
                    [0.918713, 1.004774, 1.248517, 1.302898, 0.250945],
                    [0.902887, 1.004992, 1.281720, 1.344941, 0.284051],
                    [0.870738, 1.131820, 1.302404, 1.513332, 0.430404],
                    [0.874960, 1.178630, 1.240164, 1.495022, 0.411772],
                    [0.957039, 1.178731, 1.276206, 1.540888, 0.292471],
                    [0.0, 0.0, 0.0, 0.0, 0.0],
                    [0.946004, 1.096024, 1.004854, 1.109917, 0.099959],
                    [0.916110, 1.173820, 1.006754, 1.208271, 0.178891],
                    [0.896023, 1.006796, 1.261959, 1.322067, 0.266229],
                    [0.870787, 1.009060, 1.268486, 1.332597, 0.274936],
                    [0.932435, 1.004773, 1.244990, 1.298371, 0.247451],
                    [0.917946, 1.004968, 1.271816, 1.332622, 0.274218],
                    [0.986485, 1.271402, 1.370505, 1.764252, 0.314360],
                ]
            ),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/theodore/QM3.in"),
            os.path.join(PATH, "inputs/molcas/output/theodore/653mscaspt2"),
            ["Om", "POSi", "POSf", "PR", "CT"],
            np.array(
                [
                    [0.0, 0.0, 0.0, 0.0, 0.0],
                    [0.918774, 1.004776, 1.249311, 1.303916, 0.251733],
                    [0.902711, 1.004991, 1.281098, 1.344172, 0.283434],
                    [0.876703, 1.106305, 1.335739, 1.519877, 0.439211],
                    [0.870744, 1.190437, 1.198411, 1.456133, 0.384741],
                    [0.955285, 1.191378, 1.283697, 1.566473, 0.308707],
                    [0.0, 0.0, 0.0, 0.0, 0.0],
                    [0.945659, 1.096209, 1.004790, 1.110070, 0.100078],
                    [0.915967, 1.173654, 1.007296, 1.208609, 0.179265],
                    [0.896164, 1.007266, 1.261578, 1.322063, 0.266318],
                    [0.871135, 1.008612, 1.268230, 1.331819, 0.274238],
                    [0.932635, 1.004774, 1.246236, 1.299972, 0.248686],
                    [0.917702, 1.004967, 1.270722, 1.331250, 0.273131],
                    [0.986358, 1.271309, 1.370423, 1.764060, 0.314435],
                ]
            ),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/theodore/QM3.in"),
            os.path.join(PATH, "inputs/molcas/output/theodore/653xmscaspt2"),
            ["Om", "POSi", "POSf", "PR", "CT"],
            np.array(
                [
                    [0.0, 0.0, 0.0, 0.0, 0.0],
                    [0.918712, 1.004775, 1.250066, 1.304882, 0.252481],
                    [0.902887, 1.004992, 1.280234, 1.343107, 0.282579],
                    [0.876158, 1.120096, 1.314917, 1.513482, 0.432068],
                    [0.870782, 1.179285, 1.219765, 1.469462, 0.395052],
                    [0.955797, 1.189022, 1.283156, 1.562760, 0.305944],
                    [0.0, 0.0, 0.0, 0.0, 0.0],
                    [0.945611, 1.096074, 1.004787, 1.109909, 0.099942],
                    [0.915933, 1.173754, 1.007434, 1.208877, 0.179500],
                    [0.896195, 1.007370, 1.262136, 1.322873, 0.266972],
                    [0.871185, 1.008558, 1.267491, 1.330835, 0.273453],
                    [0.932448, 1.004771, 1.241579, 1.293982, 0.244070],
                    [0.917934, 1.004970, 1.275371, 1.337057, 0.277740],
                    [0.986481, 1.271362, 1.370550, 1.764242, 0.314386],
                ]
            ),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/theodore/QM3.in"),
            os.path.join(PATH, "inputs/molcas/output/theodore/653cmspdft"),
            ["Om", "POSi", "POSf", "PR", "CT"],
            np.array(
                [
                    [0.0, 0.0, 0.0, 0.0, 0.0],
                    [0.925018, 1.004787, 1.256488, 1.313092, 0.258854],
                    [0.911757, 1.005002, 1.285508, 1.349603, 0.287812],
                    [0.875064, 1.107574, 1.343881, 1.529983, 0.447858],
                    [0.880216, 1.172360, 1.200741, 1.435853, 0.368882],
                    [0.956577, 1.188050, 1.291173, 1.571286, 0.316396],
                    [0.0, 0.0, 0.0, 0.0, 0.0],
                    [0.945975, 1.095930, 1.004846, 1.109797, 0.099857],
                    [0.916150, 1.174077, 1.006601, 1.208447, 0.178995],
                    [0.895984, 1.006675, 1.261466, 1.321321, 0.265621],
                    [0.870815, 1.009011, 1.269166, 1.333401, 0.275561],
                    [0.936929, 1.004783, 1.252865, 1.308469, 0.255261],
                    [0.927489, 1.004973, 1.275748, 1.337528, 0.278116],
                    [0.985867, 1.255277, 1.365548, 1.739307, 0.307421],
                ]
            ),
        ),
    ]

    for qmin, theo, prop, ref in tests:
        test_interface = SHARC_MOLCAS()
        test_interface.setup_mol(qmin)
        test_interface.QMin.resources["theodore_prop"] = prop
        with open(theo, "r", encoding="utf-8") as file:
            a = file.read()
            b = list(zip(prop, ref.T))
            a = test_interface._get_theodore(a)
        for idx, (p, v) in enumerate(a):
            assert p == b[idx][0] and np.allclose(v, b[idx][1]), idx


def test_dyson():
    tests = [
        (
            os.path.join(PATH, "inputs/molcas/output/dyson/QM1.in"),
            os.path.join(PATH, "inputs/molcas/output/dyson/3333casscf"),
            np.array(
                [
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        9.4449e-1,
                        9.3176e-1,
                        9.2699e-1,
                        9.4449e-1,
                        9.3176e-1,
                        9.2699e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        4.7396e-1,
                        5.4490e-7,
                        4.0455e-3,
                        4.7396e-1,
                        5.4490e-7,
                        4.0455e-3,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        4.7491e-1,
                        4.5604e-5,
                        1.4130e-7,
                        4.7491e-1,
                        4.5604e-5,
                        1.4130e-7,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        9.4449e-1,
                        4.7396e-1,
                        4.7491e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        9.2934e-1,
                        9.2751e-1,
                        2.3302e-3,
                        4.6467e-1,
                        4.6376e-1,
                        1.1651e-3,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        9.3176e-1,
                        5.4490e-7,
                        4.5604e-5,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        1.0065e-6,
                        1.1738e-4,
                        3.2319e-1,
                        5.0325e-7,
                        5.8691e-5,
                        1.6159e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        9.2699e-1,
                        4.0455e-3,
                        1.4130e-7,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        8.1759e-3,
                        6.4740e-7,
                        6.2737e-1,
                        4.0879e-3,
                        3.2370e-7,
                        3.1368e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        9.4449e-1,
                        4.7396e-1,
                        4.7491e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        4.6467e-1,
                        4.6376e-1,
                        1.1651e-3,
                        9.2934e-1,
                        9.2751e-1,
                        2.3302e-3,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        9.3176e-1,
                        5.4490e-7,
                        4.5604e-5,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        5.0325e-7,
                        5.8691e-5,
                        1.6159e-1,
                        1.0065e-6,
                        1.1738e-4,
                        3.2319e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        9.2699e-1,
                        4.0455e-3,
                        1.4130e-7,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        4.0879e-3,
                        3.2370e-7,
                        3.1368e-1,
                        8.1759e-3,
                        6.4740e-7,
                        6.2737e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        9.2934e-1,
                        1.0065e-6,
                        8.1759e-3,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        6.8138e-1,
                        7.2037e-1,
                        2.7718e-1,
                        2.2713e-1,
                        2.4012e-1,
                        9.2392e-2,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        9.2751e-1,
                        1.1738e-4,
                        6.4740e-7,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        2.7071e-1,
                        2.4025e-1,
                        6.6002e-1,
                        9.0238e-2,
                        8.0085e-2,
                        2.2001e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        2.3302e-3,
                        3.2319e-1,
                        6.2737e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        9.5419e-1,
                        4.4534e-6,
                        6.7176e-4,
                        3.1806e-1,
                        1.4845e-6,
                        2.2392e-4,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        4.6467e-1,
                        5.0325e-7,
                        4.0879e-3,
                        4.6467e-1,
                        5.0325e-7,
                        4.0879e-3,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        4.5425e-1,
                        4.8025e-1,
                        1.8478e-1,
                        4.5425e-1,
                        4.8025e-1,
                        1.8478e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        4.6376e-1,
                        5.8691e-5,
                        3.2370e-7,
                        4.6376e-1,
                        5.8691e-5,
                        3.2370e-7,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        1.8048e-1,
                        1.6017e-1,
                        4.4001e-1,
                        1.8048e-1,
                        1.6017e-1,
                        4.4001e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        1.1651e-3,
                        1.6159e-1,
                        3.1368e-1,
                        1.1651e-3,
                        1.6159e-1,
                        3.1368e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        6.3612e-1,
                        2.9689e-6,
                        4.4784e-4,
                        6.3612e-1,
                        2.9689e-6,
                        4.4784e-4,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        9.2934e-1,
                        1.0065e-6,
                        8.1759e-3,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        2.2713e-1,
                        2.4012e-1,
                        9.2392e-2,
                        6.8138e-1,
                        7.2037e-1,
                        2.7718e-1,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        9.2751e-1,
                        1.1738e-4,
                        6.4740e-7,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        9.0238e-2,
                        8.0085e-2,
                        2.2001e-1,
                        2.7071e-1,
                        2.4025e-1,
                        6.6002e-1,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        2.3302e-3,
                        3.2319e-1,
                        6.2737e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        3.1806e-1,
                        1.4845e-6,
                        2.2392e-4,
                        9.5419e-1,
                        4.4534e-6,
                        6.7176e-4,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        6.8138e-1,
                        2.7071e-1,
                        9.5419e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        7.2037e-1,
                        2.4025e-1,
                        4.4534e-6,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        2.7718e-1,
                        6.6002e-1,
                        6.7176e-4,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        2.2713e-1,
                        9.0238e-2,
                        3.1806e-1,
                        4.5425e-1,
                        1.8048e-1,
                        6.3612e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        2.4012e-1,
                        8.0085e-2,
                        1.4845e-6,
                        4.8025e-1,
                        1.6017e-1,
                        2.9689e-6,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        9.2392e-2,
                        2.2001e-1,
                        2.2392e-4,
                        1.8478e-1,
                        4.4001e-1,
                        4.4784e-4,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        4.5425e-1,
                        1.8048e-1,
                        6.3612e-1,
                        2.2713e-1,
                        9.0238e-2,
                        3.1806e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        4.8025e-1,
                        1.6017e-1,
                        2.9689e-6,
                        2.4012e-1,
                        8.0085e-2,
                        1.4845e-6,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        1.8478e-1,
                        4.4001e-1,
                        4.4784e-4,
                        9.2392e-2,
                        2.2001e-1,
                        2.2392e-4,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        6.8138e-1,
                        2.7071e-1,
                        9.5419e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        7.2037e-1,
                        2.4025e-1,
                        4.4534e-6,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.000e0,
                        2.7718e-1,
                        6.6002e-1,
                        6.7176e-4,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                ]
            ),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/dyson/QM2.in"),
            os.path.join(PATH, "inputs/molcas/output/dyson/111111casscf"),
            np.array(
                [
                    [
                        0.0000e0,
                        9.4449e-1,
                        9.4449e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        9.4449e-1,
                        0.0000e0,
                        0.0000e0,
                        9.2934e-1,
                        4.6467e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        9.4449e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        4.6467e-1,
                        9.2934e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        9.2934e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        6.8138e-1,
                        2.2713e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        4.6467e-1,
                        4.6467e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        4.5425e-1,
                        4.5425e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        9.2934e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        2.2713e-1,
                        6.8138e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        6.8138e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        2.2398e-1,
                        5.5994e-2,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        2.2713e-1,
                        4.5425e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        1.6798e-1,
                        1.1199e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        4.5425e-1,
                        2.2713e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        1.1199e-1,
                        1.6798e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        6.8138e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        5.5994e-2,
                        2.2398e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        2.2398e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        9.4084e-1,
                        1.8817e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        5.5994e-2,
                        1.6798e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        7.5267e-1,
                        3.7633e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        1.1199e-1,
                        1.1199e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        5.6450e-1,
                        5.6450e-1,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        1.6798e-1,
                        5.5994e-2,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        3.7633e-1,
                        7.5267e-1,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        2.2398e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        1.8817e-1,
                        9.4084e-1,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        9.4084e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        1.8817e-1,
                        7.5267e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        3.7633e-1,
                        5.6450e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        5.6450e-1,
                        3.7633e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        7.5267e-1,
                        1.8817e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        9.4084e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                ]
            ),
        ),
        (
            os.path.join(PATH, "inputs/molcas/output/dyson/QM3.in"),
            os.path.join(PATH, "inputs/molcas/output/dyson/000022casscf"),
            np.array(
                [
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        9.4084e-1,
                        3.8815e-4,
                        1.8817e-1,
                        7.7629e-5,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        9.4130e-1,
                        9.4152e-1,
                        1.8826e-1,
                        1.8830e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        7.5267e-1,
                        3.1052e-4,
                        3.7634e-1,
                        1.5526e-4,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        7.5304e-1,
                        7.5322e-1,
                        3.7652e-1,
                        3.7661e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        5.6451e-1,
                        2.3289e-4,
                        5.6451e-1,
                        2.3289e-4,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        5.6478e-1,
                        5.6491e-1,
                        5.6478e-1,
                        5.6491e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        3.7634e-1,
                        1.5526e-4,
                        7.5267e-1,
                        3.1052e-4,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        3.7652e-1,
                        3.7661e-1,
                        7.5304e-1,
                        7.5322e-1,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        1.8817e-1,
                        7.7629e-5,
                        9.4084e-1,
                        3.8815e-4,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        1.8826e-1,
                        1.8830e-1,
                        9.4130e-1,
                        9.4152e-1,
                    ],
                    [
                        9.4084e-1,
                        9.4130e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        3.8815e-4,
                        9.4152e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        1.8817e-1,
                        1.8826e-1,
                        7.5267e-1,
                        7.5304e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        7.7629e-5,
                        1.8830e-1,
                        3.1052e-4,
                        7.5322e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        3.7634e-1,
                        3.7652e-1,
                        5.6451e-1,
                        5.6478e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        1.5526e-4,
                        3.7661e-1,
                        2.3289e-4,
                        5.6491e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        5.6451e-1,
                        5.6478e-1,
                        3.7634e-1,
                        3.7652e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        2.3289e-4,
                        5.6491e-1,
                        1.5526e-4,
                        3.7661e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        7.5267e-1,
                        7.5304e-1,
                        1.8817e-1,
                        1.8826e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        3.1052e-4,
                        7.5322e-1,
                        7.7629e-5,
                        1.8830e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        9.4084e-1,
                        9.4130e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                    [
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        3.8815e-4,
                        9.4152e-1,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                        0.0000e0,
                    ],
                ]
            ),
        ),
    ]

    for qmin, output, ref in tests:
        test_interface = SHARC_MOLCAS()
        test_interface.setup_mol(qmin)
        ref[ref < 1e-5] = 0
        with open(output, "r", encoding="utf-8") as f:
            a = f.read()
            a = test_interface._get_dyson(a)
            assert np.allclose(a, ref, rtol=1e-1)


def test_densities():
    tests = [
        (
            os.path.join(PATH, "inputs/molcas/density/thioformaldehyde/"),  # cc-pVTZ
            {
                (electronic_state(0, 0, 0, 1), electronic_state(0, 0, 0, 1), "tot"): 40.0,
                (electronic_state(0, 0, 0, 2), electronic_state(0, 0, 0, 2), "tot"): 40.0,
                (electronic_state(0, 0, 0, 3), electronic_state(0, 0, 0, 3), "tot"): 40.0,
                (electronic_state(1, 1, -1, 1), electronic_state(1, 1, -1, 1), "tot"): 39.0,
                (electronic_state(1, 1, 1, 1), electronic_state(1, 1, 1, 1), "tot"): 39.0,
                (electronic_state(0, 2, -2, 1), electronic_state(0, 2, -2, 1), "tot"): 40.0,
                (electronic_state(0, 2, 2, 1), electronic_state(0, 2, 2, 1), "tot"): 40.0,
                (electronic_state(0, 2, 0, 1), electronic_state(0, 2, 0, 1), "tot"): 40.0,
                (electronic_state(0, 2, -2, 2), electronic_state(0, 2, -2, 2), "tot"): 40.0,
                (electronic_state(0, 2, 2, 2), electronic_state(0, 2, 2, 2), "tot"): 40.0,
                (electronic_state(0, 2, 0, 2), electronic_state(0, 2, 0, 2), "tot"): 40.0,
                (electronic_state(1, 3, -3, 1), electronic_state(1, 3, -3, 1), "tot"): 39.0,
                (electronic_state(1, 3, -1, 1), electronic_state(1, 3, -1, 1), "tot"): 39.0,
                (electronic_state(1, 3, 1, 1), electronic_state(1, 3, 1, 1), "tot"): 39.0,
                (electronic_state(1, 3, 3, 1), electronic_state(1, 3, 3, 1), "tot"): 39.0,
            },
        ),
        (
            os.path.join(PATH, "inputs/molcas/density/thioformaldehyde_6-31G/"),
            {
                (electronic_state(0, 0, 0, 1), electronic_state(0, 0, 0, 1), "tot"): 40.0,
                (electronic_state(0, 0, 0, 2), electronic_state(0, 0, 0, 2), "tot"): 40.0,
                (electronic_state(0, 0, 0, 3), electronic_state(0, 0, 0, 3), "tot"): 40.0,
                (electronic_state(1, 1, -1, 1), electronic_state(1, 1, -1, 1), "tot"): 39.0,
                (electronic_state(1, 1, 1, 1), electronic_state(1, 1, 1, 1), "tot"): 39.0,
                (electronic_state(0, 2, -2, 1), electronic_state(0, 2, -2, 1), "tot"): 40.0,
                (electronic_state(0, 2, 2, 1), electronic_state(0, 2, 2, 1), "tot"): 40.0,
                (electronic_state(0, 2, 0, 1), electronic_state(0, 2, 0, 1), "tot"): 40.0,
                (electronic_state(0, 2, -2, 2), electronic_state(0, 2, -2, 2), "tot"): 40.0,
                (electronic_state(0, 2, 2, 2), electronic_state(0, 2, 2, 2), "tot"): 40.0,
                (electronic_state(0, 2, 0, 2), electronic_state(0, 2, 0, 2), "tot"): 40.0,
                (electronic_state(1, 3, -3, 1), electronic_state(1, 3, -3, 1), "tot"): 39.0,
                (electronic_state(1, 3, -1, 1), electronic_state(1, 3, -1, 1), "tot"): 39.0,
                (electronic_state(1, 3, 1, 1), electronic_state(1, 3, 1, 1), "tot"): 39.0,
                (electronic_state(1, 3, 3, 1), electronic_state(1, 3, 3, 1), "tot"): 39.0,
            },
        ),
        (
            os.path.join(PATH, "inputs/molcas/density/thioformaldehyde_cc-pvqz/"),
            {
                (electronic_state(0, 0, 0, 1), electronic_state(0, 0, 0, 1), "tot"): 40.0,
                (electronic_state(0, 0, 0, 2), electronic_state(0, 0, 0, 2), "tot"): 40.0,
                (electronic_state(0, 0, 0, 3), electronic_state(0, 0, 0, 3), "tot"): 40.0,
                (electronic_state(1, 1, -1, 1), electronic_state(1, 1, -1, 1), "tot"): 39.0,
                (electronic_state(1, 1, 1, 1), electronic_state(1, 1, 1, 1), "tot"): 39.0,
                (electronic_state(0, 2, -2, 1), electronic_state(0, 2, -2, 1), "tot"): 40.0,
                (electronic_state(0, 2, 2, 1), electronic_state(0, 2, 2, 1), "tot"): 40.0,
                (electronic_state(0, 2, 0, 1), electronic_state(0, 2, 0, 1), "tot"): 40.0,
                (electronic_state(0, 2, -2, 2), electronic_state(0, 2, -2, 2), "tot"): 40.0,
                (electronic_state(0, 2, 2, 2), electronic_state(0, 2, 2, 2), "tot"): 40.0,
                (electronic_state(0, 2, 0, 2), electronic_state(0, 2, 0, 2), "tot"): 40.0,
                (electronic_state(1, 3, -3, 1), electronic_state(1, 3, -3, 1), "tot"): 39.0,
                (electronic_state(1, 3, -1, 1), electronic_state(1, 3, -1, 1), "tot"): 39.0,
                (electronic_state(1, 3, 1, 1), electronic_state(1, 3, 1, 1), "tot"): 39.0,
                (electronic_state(1, 3, 3, 1), electronic_state(1, 3, 3, 1), "tot"): 39.0,
            },
        ),
    ]

    for path, ref in tests:
        test_interface = SHARC_MOLCAS()
        test_interface.setup_mol(os.path.join(path, "QM.in"))
        test_interface.QMin.resources["scratchdir"] = path
        test_interface.setup_interface()
        test_interface._hdf5 = True
        test_interface.read_template(os.path.join(path, "MOLCAS.template"))
        test_interface._read_resources = True
        test_interface.read_requests(os.path.join(path, "QM.in"))
        with h5py.File(os.path.join(path, "master/MOLCAS.rassi.h5")) as f:
            test_interface.QMout.allocate(
                states=test_interface.QMin.molecule["states"],
                natom=test_interface.QMin.molecule["natom"],
                npc=test_interface.QMin.molecule["npc"],
                requests=set(["density_matrices", "dm"]),
            )
            mol, _, _, _, _, _ = tools.molden.load(os.path.join(path, "master/MOLCAS.rasscf.molden"))
            mol.basis = mol._basis
            test_interface.QMout["mol"] = mol
            test_interface._get_densities(f["BASIS_FUNCTION_IDS"][:])
            test_interface.get_densities()

        # Test number of electrons
        ao_ovlp = test_interface.QMout["mol"].intor("int1e_ovlp")
        for k, v in ref.items():
            assert pytest.approx(np.einsum("ij,ij->", ao_ovlp, test_interface.QMout["density_matrices"][k])) == v

        # Test (transition) dipole moments
        #s_cnt = 0
        #for m, s in enumerate(test_interface.QMin.molecule["states"], 1):
        #    if s > 0:
        #        with h5py.File(os.path.join(path, f"master/MOLCAS.rassi.{m}.h5"), "r") as dp:
        #            for _ in range(m):
        #                test_interface.QMout["dm"][:, s_cnt : s_cnt + s, s_cnt : s_cnt + s] = dp["SFS_EDIPMOM"][:]
        #                s_cnt += s
#
        #mu = test_interface.QMout["mol"].intor("int1e_r")
        #nuclear_moment = np.sum(np.array([mol.atom_charge(j) * mol.atom_coord(j) for j in range(mol.natm)]), axis=0)
        #for (s1, s2, spin), rho in test_interface.QMout["density_matrices"].items():
        #    if spin != "tot" or s1.N > s2.N:
        #        continue
        #    x = -np.einsum("xij,ij->x", mu, rho)
        #    if s1 is s2:
        #        x += nuclear_moment
        #    dp1 = sum(s*m for (m, s) in enumerate(test_interface.QMin.molecule["states"][:s1.S], 1)) + s1.N -1
        #    dp2 = sum(s*m for (m, s) in enumerate(test_interface.QMin.molecule["states"][:s2.S], 1)) + s2.N -1
        #    assert np.allclose(x, test_interface.QMout["dm"][:, dp1, dp2])
