******************************************

SHARC Program Suite

Copyright (c) 2015 University of Vienna

******************************************

Installation Instructions
*************************

Copyright (c) 2015 University of Vienna


Basic Installation
==================

All you need to install sharc on a Linux system is a Fortran90 compatible 
compiler (this release is tested against gfortran 4.4.7 and ifort 15.0)
as well as working blas, lapack and fftw3 libraries. The versions which come
with your Linux distribution should be sufficient. IF you want to use your
own numerical libraries (like MKL etc), please change the corresponding
LD variable within the Makefile.

To compile the fortran source code, just unzip and untar the distribution

tar -xzvf sharc.tgz

This should create a new directory called sharc which contains all
the necessary subdirectories and files. 

Now go to the source directory

cd sharc/source

and edit the Makefile by adjusting the F90 variable to point to the fortran
compiler of your choice.
Issuing the command:

make

will compile the source and create all the binaries.

make install

will copy the binary files into the sharc/bin/ directory of the 
Sharc distribution, which already contains all the python scripts which
come with sharc.

In oder to use the binaries together with the python scripts,
set the $SHARC environment variable to the bin directory of the
sharc distribution, e.g. if you have unpacked sharc into your $HOME directory, 
just set: 

export SHARC=~/sharc/bin (for bourne shell users)

or

setenv SHARC $HOME/sharc/bin (for c-shell type users)

Note that it is advisable to put this line into your shell's login
scripts.

Now you are ready to run your first surface hopping trajectory including
arbitrary couplings!

Maybe at this stage it is a good idea to take a look at the test suite.
The easiest way to run some basic tests is to execute $SHARC/tests.py, 
which will test the fundamental functionality of SHARC.

Installation for the experts
============================

Although the time consuming part of any ab initio molecular dynamics
simulation are the necessary quantum chemical calculations and thus
any BLAS/LAPACK version should be fine to link sharc against, adjusting
the Makefile to use a vendor provided version like MKL can easily be
done by exchanging the corresponding Makefile line

LD = -lblas -llapack -lfftw3

by something like

LD = -L/path/to/your/library -lmyblas -lmylapack -lmyfftw3

where /path/to/your/library points to the directory where your
library files are located and myblas, mylapack and myfftw3 
have to be replace by the actual name of your numerical libraries. 

To link against MKL, using the enviroment variables provided by
intel, just use

LD =  -L$(MKLROOT)/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -lm

Note that since version 10.2, MKL provides FFTW3 interfaces, so there is
no need to link against fftw3 explicitly when using MKL.




